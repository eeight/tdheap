# Makefile.in generated by automake 1.10.2 from Makefile.am.
# tdheap/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# What the first for loop does: it copies a bunch of files which names
# of the form wurble-arch-os to $prefix/lib/valgrind/arch-os/wurble.
# There is some complexity in the sed mangling because wurble may itself
# contain a dash, which must be ignored.  For example we want
#    exp-omega-x86-linux
# to be installed in 
#    $prefix/lib/valgrind/x86-linux/exp-omega
# and not in
#    $prefix/lib/valgrind/omega-x86-linux/exp
# or similarly mutant place.
#
# Note there is identical sed magic in Makefile.tool-inplace.am.

# What the second for loop does: it copies libcoregrind.a and libvex.a
# into the correct (target-specific) lib dirs at install time.
# $(noinst_LIBRARIES) will look like this:
#    libcoregrind_x86_linux.a libreplacemalloc_toolpreload_x86_linux.a
#    libcoregrind_amd64_linux.a libreplacemalloc_toolpreload_amd64_linux.a
# The 'if expr' filters out all but the libcoregrind_ ones.
# pD and pU are the (arch,os) target pairs separated by a dash (pD) or
# an underscore (pU) respectively, eg amd64-linux (pD) and amd64_linux (pU).
# It then copies libcoregrind.a and libvex.a to the right places.

# For a description of what these magic sed commands do, see comments
# in Makefile.install.am (which has identical magic)


pkgdatadir = $(datadir)/valgrind
pkglibdir = $(libdir)/valgrind
pkgincludedir = $(includedir)/valgrind
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.flags.am \
	$(top_srcdir)/Makefile.install.am \
	$(top_srcdir)/Makefile.tool-flags.am \
	$(top_srcdir)/Makefile.tool-inplace.am \
	$(top_srcdir)/Makefile.tool.am
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6)
am__append_1 = tdheap-x86-linux vgpreload_tdheap-x86-linux.so
am__append_2 = tdheap-amd64-linux vgpreload_tdheap-amd64-linux.so
#am__append_3 = tdheap-ppc32-linux vgpreload_tdheap-ppc32-linux.so
#am__append_4 = tdheap-ppc64-linux vgpreload_tdheap-ppc64-linux.so
#am__append_5 = tdheap-ppc32-aix5 vgpreload_tdheap-ppc32-aix5.so
#am__append_6 = tdheap-ppc64-aix5 vgpreload_tdheap-ppc64-aix5.so
subdir = tdheap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = tdheap-x86-linux$(EXEEXT) \
	vgpreload_tdheap-x86-linux.so$(EXEEXT)
am__EXEEXT_2 = tdheap-amd64-linux$(EXEEXT) \
	vgpreload_tdheap-amd64-linux.so$(EXEEXT)
#am__EXEEXT_3 = tdheap-ppc32-linux$(EXEEXT) \
#	vgpreload_tdheap-ppc32-linux.so$(EXEEXT)
#am__EXEEXT_4 = tdheap-ppc64-linux$(EXEEXT) \
#	vgpreload_tdheap-ppc64-linux.so$(EXEEXT)
#am__EXEEXT_5 = tdheap-ppc32-aix5$(EXEEXT) \
#	vgpreload_tdheap-ppc32-aix5.so$(EXEEXT)
#am__EXEEXT_6 = tdheap-ppc64-aix5$(EXEEXT) \
#	vgpreload_tdheap-ppc64-aix5.so$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 = tdheap_amd64_linux-th_main.$(OBJEXT) \
	tdheap_amd64_linux-malloc_replace.$(OBJEXT) \
	tdheap_amd64_linux-mem_tracer.$(OBJEXT) \
	tdheap_amd64_linux-cluster_output.$(OBJEXT)
am_tdheap_amd64_linux_OBJECTS = $(am__objects_1)
tdheap_amd64_linux_OBJECTS = $(am_tdheap_amd64_linux_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(COREGRIND_LIBS_AMD64_LINUX) \
	$(am__DEPENDENCIES_1)
tdheap_amd64_linux_LINK = $(CCLD) $(tdheap_amd64_linux_CFLAGS) \
	$(CFLAGS) $(tdheap_amd64_linux_LDFLAGS) $(LDFLAGS) -o $@
am__objects_2 = tdheap_ppc32_aix5-th_main.$(OBJEXT) \
	tdheap_ppc32_aix5-malloc_replace.$(OBJEXT) \
	tdheap_ppc32_aix5-mem_tracer.$(OBJEXT) \
	tdheap_ppc32_aix5-cluster_output.$(OBJEXT)
am_tdheap_ppc32_aix5_OBJECTS = $(am__objects_2)
tdheap_ppc32_aix5_OBJECTS = $(am_tdheap_ppc32_aix5_OBJECTS)
am__DEPENDENCIES_3 = $(COREGRIND_LIBS_PPC32_AIX5) \
	$(am__DEPENDENCIES_1)
tdheap_ppc32_aix5_LINK = $(CCLD) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) \
	$(tdheap_ppc32_aix5_LDFLAGS) $(LDFLAGS) -o $@
am__objects_3 = tdheap_ppc32_linux-th_main.$(OBJEXT) \
	tdheap_ppc32_linux-malloc_replace.$(OBJEXT) \
	tdheap_ppc32_linux-mem_tracer.$(OBJEXT) \
	tdheap_ppc32_linux-cluster_output.$(OBJEXT)
am_tdheap_ppc32_linux_OBJECTS = $(am__objects_3)
tdheap_ppc32_linux_OBJECTS = $(am_tdheap_ppc32_linux_OBJECTS)
am__DEPENDENCIES_4 = $(COREGRIND_LIBS_PPC32_LINUX) \
	$(am__DEPENDENCIES_1)
tdheap_ppc32_linux_LINK = $(CCLD) $(tdheap_ppc32_linux_CFLAGS) \
	$(CFLAGS) $(tdheap_ppc32_linux_LDFLAGS) $(LDFLAGS) -o $@
am__objects_4 = tdheap_ppc64_aix5-th_main.$(OBJEXT) \
	tdheap_ppc64_aix5-malloc_replace.$(OBJEXT) \
	tdheap_ppc64_aix5-mem_tracer.$(OBJEXT) \
	tdheap_ppc64_aix5-cluster_output.$(OBJEXT)
am_tdheap_ppc64_aix5_OBJECTS = $(am__objects_4)
tdheap_ppc64_aix5_OBJECTS = $(am_tdheap_ppc64_aix5_OBJECTS)
am__DEPENDENCIES_5 = $(COREGRIND_LIBS_PPC64_AIX5) \
	$(am__DEPENDENCIES_1)
tdheap_ppc64_aix5_LINK = $(CCLD) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) \
	$(tdheap_ppc64_aix5_LDFLAGS) $(LDFLAGS) -o $@
am__objects_5 = tdheap_ppc64_linux-th_main.$(OBJEXT) \
	tdheap_ppc64_linux-malloc_replace.$(OBJEXT) \
	tdheap_ppc64_linux-mem_tracer.$(OBJEXT) \
	tdheap_ppc64_linux-cluster_output.$(OBJEXT)
am_tdheap_ppc64_linux_OBJECTS = $(am__objects_5)
tdheap_ppc64_linux_OBJECTS = $(am_tdheap_ppc64_linux_OBJECTS)
am__DEPENDENCIES_6 = $(COREGRIND_LIBS_PPC64_LINUX) \
	$(am__DEPENDENCIES_1)
tdheap_ppc64_linux_LINK = $(CCLD) $(tdheap_ppc64_linux_CFLAGS) \
	$(CFLAGS) $(tdheap_ppc64_linux_LDFLAGS) $(LDFLAGS) -o $@
am__objects_6 = tdheap_x86_linux-th_main.$(OBJEXT) \
	tdheap_x86_linux-malloc_replace.$(OBJEXT) \
	tdheap_x86_linux-mem_tracer.$(OBJEXT) \
	tdheap_x86_linux-cluster_output.$(OBJEXT)
am_tdheap_x86_linux_OBJECTS = $(am__objects_6)
tdheap_x86_linux_OBJECTS = $(am_tdheap_x86_linux_OBJECTS)
am__DEPENDENCIES_7 = $(COREGRIND_LIBS_X86_LINUX) $(am__DEPENDENCIES_1)
tdheap_x86_linux_LINK = $(CCLD) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) \
	$(tdheap_x86_linux_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_amd64_linux_so_OBJECTS =
vgpreload_tdheap_amd64_linux_so_OBJECTS =  \
	$(am_vgpreload_tdheap_amd64_linux_so_OBJECTS)
vgpreload_tdheap_amd64_linux_so_LDADD = $(LDADD)
vgpreload_tdheap_amd64_linux_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_amd64_linux_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_amd64_linux_so_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_ppc32_aix5_so_OBJECTS =
vgpreload_tdheap_ppc32_aix5_so_OBJECTS =  \
	$(am_vgpreload_tdheap_ppc32_aix5_so_OBJECTS)
vgpreload_tdheap_ppc32_aix5_so_LDADD = $(LDADD)
vgpreload_tdheap_ppc32_aix5_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_ppc32_aix5_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_ppc32_aix5_so_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_ppc32_linux_so_OBJECTS =
vgpreload_tdheap_ppc32_linux_so_OBJECTS =  \
	$(am_vgpreload_tdheap_ppc32_linux_so_OBJECTS)
vgpreload_tdheap_ppc32_linux_so_LDADD = $(LDADD)
vgpreload_tdheap_ppc32_linux_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_ppc32_linux_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_ppc32_linux_so_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_ppc64_aix5_so_OBJECTS =
vgpreload_tdheap_ppc64_aix5_so_OBJECTS =  \
	$(am_vgpreload_tdheap_ppc64_aix5_so_OBJECTS)
vgpreload_tdheap_ppc64_aix5_so_LDADD = $(LDADD)
vgpreload_tdheap_ppc64_aix5_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_ppc64_aix5_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_ppc64_aix5_so_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_ppc64_linux_so_OBJECTS =
vgpreload_tdheap_ppc64_linux_so_OBJECTS =  \
	$(am_vgpreload_tdheap_ppc64_linux_so_OBJECTS)
vgpreload_tdheap_ppc64_linux_so_LDADD = $(LDADD)
vgpreload_tdheap_ppc64_linux_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_ppc64_linux_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_ppc64_linux_so_LDFLAGS) $(LDFLAGS) -o $@
am_vgpreload_tdheap_x86_linux_so_OBJECTS =
vgpreload_tdheap_x86_linux_so_OBJECTS =  \
	$(am_vgpreload_tdheap_x86_linux_so_OBJECTS)
vgpreload_tdheap_x86_linux_so_LDADD = $(LDADD)
vgpreload_tdheap_x86_linux_so_LINK = $(CCLD) \
	$(vgpreload_tdheap_x86_linux_so_CFLAGS) $(CFLAGS) \
	$(vgpreload_tdheap_x86_linux_so_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(tdheap_amd64_linux_SOURCES) $(tdheap_ppc32_aix5_SOURCES) \
	$(tdheap_ppc32_linux_SOURCES) $(tdheap_ppc64_aix5_SOURCES) \
	$(tdheap_ppc64_linux_SOURCES) $(tdheap_x86_linux_SOURCES) \
	$(vgpreload_tdheap_amd64_linux_so_SOURCES) \
	$(vgpreload_tdheap_ppc32_aix5_so_SOURCES) \
	$(vgpreload_tdheap_ppc32_linux_so_SOURCES) \
	$(vgpreload_tdheap_ppc64_aix5_so_SOURCES) \
	$(vgpreload_tdheap_ppc64_linux_so_SOURCES) \
	$(vgpreload_tdheap_x86_linux_so_SOURCES)
DIST_SOURCES = $(tdheap_amd64_linux_SOURCES) \
	$(tdheap_ppc32_aix5_SOURCES) $(tdheap_ppc32_linux_SOURCES) \
	$(tdheap_ppc64_aix5_SOURCES) $(tdheap_ppc64_linux_SOURCES) \
	$(tdheap_x86_linux_SOURCES) \
	$(vgpreload_tdheap_amd64_linux_so_SOURCES) \
	$(vgpreload_tdheap_ppc32_aix5_so_SOURCES) \
	$(vgpreload_tdheap_ppc32_linux_so_SOURCES) \
	$(vgpreload_tdheap_ppc64_aix5_so_SOURCES) \
	$(vgpreload_tdheap_ppc64_linux_so_SOURCES) \
	$(vgpreload_tdheap_x86_linux_so_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/eeight/prog/work/valgrind/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/eeight/prog/work/valgrind/missing --run tar
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/eeight/prog/work/valgrind/missing --run autoconf
AUTOHEADER = ${SHELL} /home/eeight/prog/work/valgrind/missing --run autoheader
AUTOMAKE = ${SHELL} /home/eeight/prog/work/valgrind/missing --run automake-1.10
AWK = gawk
BOOST_CFLAGS = 
BOOST_LIBS = -lboost_thread-mt -m64
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -Wno-long-long
CCDEPMODE = depmode=gcc3
CFLAGS = -Wno-long-long -Wno-pointer-sign -Wdeclaration-after-statement -fno-stack-protector
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFAULT_SUPP = exp-ptrcheck.supp xfree-3.supp xfree-4.supp glibc-2.X-drd.supp glibc-2.34567-NPTL-helgrind.supp glibc-2.X.supp 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS = --with-vex=$(top_srcdir)/VEX
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FLAG_FNO_STACK_PROTECTOR = -fno-stack-protector
FLAG_M32 = -m32
FLAG_M64 = -m64
FLAG_MAIX32 = 
FLAG_MAIX64 = 
FLAG_MMMX = -mmmx
FLAG_MSSE = -msse
FLAG_UNLIMITED_INLINE_UNIT_GROWTH = --param inline-unit-growth=900
FLAG_WDECL_AFTER_STMT = -Wdeclaration-after-statement
FLAG_W_EXTRA = -Wextra
FLAG_W_NO_FORMAT_ZERO_LENGTH = -Wno-format-zero-length
GDB = /usr/bin/gdb
GLIBC_VERSION = 2.8
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/eeight/prog/work/valgrind/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MPI_CC = mpicc
OBJEXT = o
PACKAGE = valgrind
PACKAGE_BUGREPORT = valgrind-users@lists.sourceforge.net
PACKAGE_NAME = Valgrind
PACKAGE_STRING = Valgrind 3.4.1
PACKAGE_TARNAME = valgrind
PACKAGE_VERSION = 3.4.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
PREFERRED_STACK_BOUNDARY = 
QTCORE_CFLAGS = -DQT_SHARED -I/usr/include/qt4 -I/usr/include/qt4/QtCore  
QTCORE_LIBS = -L/usr/lib64/qt4 -lQtCore -lz -lm -lrt -lpthread -ldl  
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VALT_LOAD_ADDRESS = 0x38000000
VERSION = 3.4.1
VEX_DIR = $(top_srcdir)/VEX
VG_ARCH_ALL = amd64 ppc32 ppc64 x86
VG_ARCH_MAX = amd64
VG_ARCH_PRI = amd64
VG_OS = linux
VG_PLATFORM_PRI = AMD64_LINUX
VG_PLATFORM_SEC = X86_LINUX
abs_builddir = /home/eeight/prog/work/valgrind/tdheap
abs_srcdir = /home/eeight/prog/work/valgrind/tdheap
abs_top_builddir = /home/eeight/prog/work/valgrind
abs_top_srcdir = /home/eeight/prog/work/valgrind
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/eeight/prog/work/valgrind/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/eeight/prog/work/valgrind/inst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = . tests docs
valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place
add_includes_x86_linux = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_x86=1 \
		-DVGO_linux=1 \
		-DVGP_x86_linux=1

add_includes_amd64_linux = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_amd64=1 \
		-DVGO_linux=1 \
		-DVGP_amd64_linux=1

add_includes_ppc32_linux = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

add_includes_ppc64_linux = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_ppc64=1 \
		-DVGO_linux=1 \
		-DVGP_ppc64_linux=1

add_includes_ppc32_aix5 = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_ppc32=1 \
		-DVGO_aix5=1 \
		-DVGP_ppc32_aix5=1

add_includes_ppc64_aix5 = -I$(top_srcdir)/include \
		-I$(top_srcdir)/VEX/pub \
		-DVGA_ppc64=1 \
		-DVGO_aix5=1 \
		-DVGP_ppc64_aix5=1


# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
AM_CFLAGS_BASE = -O2 -g -Wmissing-prototypes -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
		 -Wno-format-zero-length \
                 -fno-strict-aliasing


# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
AM_CFLAGS_PIC = -O -g -fpic -fno-omit-frame-pointer -fno-strict-aliasing

# Flags for specific targets
AM_FLAG_M3264_X86_LINUX = -m32
AM_CPPFLAGS_X86_LINUX = $(add_includes_x86_linux)
AM_CFLAGS_X86_LINUX = $(WERROR) -m32  \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(add_includes_x86_linux) -m32 -g
AM_FLAG_M3264_AMD64_LINUX = -m64
AM_CPPFLAGS_AMD64_LINUX = $(add_includes_amd64_linux)
AM_CFLAGS_AMD64_LINUX = $(WERROR) -m64 -fomit-frame-pointer \
				 $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(add_includes_amd64_linux) -m64 -g
AM_FLAG_M3264_PPC32_LINUX = -m32
AM_CPPFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux)
AM_CFLAGS_PPC32_LINUX = $(WERROR) -m32 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux) -Wa,-maltivec -m32 -g
AM_FLAG_M3264_PPC64_LINUX = -m64
AM_CPPFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux)
AM_CFLAGS_PPC64_LINUX = $(WERROR) -m64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux) -Wa,-maltivec -m64 -g
AM_FLAG_M3264_PPC32_AIX5 = 
AM_CPPFLAGS_PPC32_AIX5 = $(add_includes_ppc32_aix5)
AM_CFLAGS_PPC32_AIX5 = $(WERROR)  -mcpu=powerpc $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_AIX5 = $(add_includes_ppc32_aix5) \
				 -mcpu=powerpc -g

AM_FLAG_M3264_PPC64_AIX5 = 
AM_CPPFLAGS_PPC64_AIX5 = $(add_includes_ppc64_aix5)
AM_CFLAGS_PPC64_AIX5 = $(WERROR)  -mcpu=powerpc64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_AIX5 = $(add_includes_ppc64_aix5) \
				 -mcpu=powerpc64 -g


# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_AMD64_LINUX)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_AMD64_LINUX)
AM_CFLAGS_PRI = $(AM_CFLAGS_AMD64_LINUX)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_AMD64_LINUX)
#AM_FLAG_M3264_SEC = 
AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_X86_LINUX)

# Baseline link flags for making dynamic shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nodefaultlibs -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_AIX5 = -nodefaultlibs -shared -Wl,-G -Wl,-bnogc
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m32
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) -m64
PRELOAD_LDFLAGS_PPC32_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
PRELOAD_LDFLAGS_PPC64_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  
LIBREPLACEMALLOC_X86_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_x86_linux.a

LIBREPLACEMALLOC_AMD64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_amd64_linux.a

LIBREPLACEMALLOC_PPC32_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_ppc32_linux.a

LIBREPLACEMALLOC_PPC64_LINUX = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_ppc64_linux.a

LIBREPLACEMALLOC_PPC32_AIX5 = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_ppc32_aix5.a

LIBREPLACEMALLOC_PPC64_AIX5 = \
	$(top_builddir)/coregrind/libreplacemalloc_toolpreload_ppc64_aix5.a

COREGRIND_LIBS_X86_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_x86_linux.a \
	$(top_srcdir)/VEX/libvex_x86_linux.a

COREGRIND_LIBS_AMD64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_amd64_linux.a \
	$(top_srcdir)/VEX/libvex_amd64_linux.a

COREGRIND_LIBS_PPC32_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_ppc32_linux.a \
	$(top_srcdir)/VEX/libvex_ppc32_linux.a

COREGRIND_LIBS_PPC64_LINUX = \
	$(top_builddir)/coregrind/libcoregrind_ppc64_linux.a \
	$(top_srcdir)/VEX/libvex_ppc64_linux.a

COREGRIND_LIBS_PPC32_AIX5 = \
	$(top_builddir)/coregrind/libcoregrind_ppc32_aix5.a \
	$(top_srcdir)/VEX/libvex_ppc32_aix5.a

COREGRIND_LIBS_PPC64_AIX5 = \
	$(top_builddir)/coregrind/libcoregrind_ppc64_aix5.a \
	$(top_srcdir)/VEX/libvex_ppc64_aix5.a

TOOL_LDADD_COMMON = -lgcc
TOOL_LDFLAGS_COMMON_LINUX = -static \
	-Wl,-defsym,valt_load_address=0x38000000 \
	-nodefaultlibs -nostartfiles -u _start

TOOL_LDFLAGS_COMMON_AIX5 = -static -Wl,-e_start_valgrind
TOOL_LDADD_X86_LINUX = $(COREGRIND_LIBS_X86_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_X86_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32 \
	-Wl,-T,$(top_builddir)/valt_load_address_x86_linux.lds

TOOL_LDADD_AMD64_LINUX = $(COREGRIND_LIBS_AMD64_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_AMD64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64 \
	-Wl,-T,$(top_builddir)/valt_load_address_amd64_linux.lds

TOOL_LDADD_PPC32_LINUX = $(COREGRIND_LIBS_PPC32_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC32_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m32 \
	-Wl,-T,$(top_builddir)/valt_load_address_ppc32_linux.lds

TOOL_LDADD_PPC64_LINUX = $(COREGRIND_LIBS_PPC64_LINUX) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC64_LINUX = \
	$(TOOL_LDFLAGS_COMMON_LINUX) -m64 \
	-Wl,-T,$(top_builddir)/valt_load_address_ppc64_linux.lds

TOOL_LDADD_PPC32_AIX5 = $(COREGRIND_LIBS_PPC32_AIX5) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC32_AIX5 = \
	$(TOOL_LDFLAGS_COMMON_AIX5) 

TOOL_LDADD_PPC64_AIX5 = $(COREGRIND_LIBS_PPC64_AIX5) $(TOOL_LDADD_COMMON)
TOOL_LDFLAGS_PPC64_AIX5 = \
	$(TOOL_LDFLAGS_COMMON_AIX5)  -Wl,-bbigtoc

LIBREPLACEMALLOC_LDFLAGS_X86_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_X86_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_AMD64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC32_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC64_LINUX = \
	-Wl,--whole-archive \
	$(LIBREPLACEMALLOC_PPC64_LINUX) \
	-Wl,--no-whole-archive

LIBREPLACEMALLOC_LDFLAGS_PPC32_AIX5 = \
	$(LIBREPLACEMALLOC_PPC32_AIX5)

LIBREPLACEMALLOC_LDFLAGS_PPC64_AIX5 = \
	$(LIBREPLACEMALLOC_PPC64_AIX5)

vgpreload_tdheap_x86_linux_so_SOURCES = 
vgpreload_tdheap_x86_linux_so_CPPFLAGS = $(AM_CPPFLAGS_X86_LINUX)
vgpreload_tdheap_x86_linux_so_CFLAGS = $(AM_CFLAGS_X86_LINUX) $(AM_CFLAGS_PIC)
vgpreload_tdheap_x86_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_X86_LINUX)
vgpreload_tdheap_x86_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_X86_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_X86_LINUX)

vgpreload_tdheap_amd64_linux_so_SOURCES = 
vgpreload_tdheap_amd64_linux_so_CPPFLAGS = $(AM_CPPFLAGS_AMD64_LINUX)
vgpreload_tdheap_amd64_linux_so_CFLAGS = $(AM_CFLAGS_AMD64_LINUX) $(AM_CFLAGS_PIC)
vgpreload_tdheap_amd64_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_AMD64_LINUX)
vgpreload_tdheap_amd64_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_AMD64_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_AMD64_LINUX)

vgpreload_tdheap_ppc32_linux_so_SOURCES = 
vgpreload_tdheap_ppc32_linux_so_CPPFLAGS = $(AM_CPPFLAGS_PPC32_LINUX)
vgpreload_tdheap_ppc32_linux_so_CFLAGS = $(AM_CFLAGS_PPC32_LINUX) $(AM_CFLAGS_PIC)
vgpreload_tdheap_ppc32_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_PPC32_LINUX)
vgpreload_tdheap_ppc32_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_PPC32_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_PPC32_LINUX)

vgpreload_tdheap_ppc64_linux_so_SOURCES = 
vgpreload_tdheap_ppc64_linux_so_CPPFLAGS = $(AM_CPPFLAGS_PPC64_LINUX)
vgpreload_tdheap_ppc64_linux_so_CFLAGS = $(AM_CFLAGS_PPC64_LINUX) $(AM_CFLAGS_PIC)
vgpreload_tdheap_ppc64_linux_so_DEPENDENCIES = $(LIBREPLACEMALLOC_PPC64_LINUX)
vgpreload_tdheap_ppc64_linux_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_PPC64_LINUX) \
	$(LIBREPLACEMALLOC_LDFLAGS_PPC64_LINUX)

vgpreload_tdheap_ppc32_aix5_so_SOURCES = 
vgpreload_tdheap_ppc32_aix5_so_CPPFLAGS = $(AM_CPPFLAGS_PPC32_AIX5)
vgpreload_tdheap_ppc32_aix5_so_CFLAGS = $(AM_CFLAGS_PPC32_AIX5) $(AM_CFLAGS_PIC)
vgpreload_tdheap_ppc32_aix5_so_DEPENDENCIES = $(LIBREPLACEMALLOC_PPC32_AIX5)
vgpreload_tdheap_ppc32_aix5_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_PPC32_AIX5) \
	$(LIBREPLACEMALLOC_LDFLAGS_PPC32_AIX5)

vgpreload_tdheap_ppc64_aix5_so_SOURCES = 
vgpreload_tdheap_ppc64_aix5_so_CPPFLAGS = $(AM_CPPFLAGS_PPC64_AIX5)
vgpreload_tdheap_ppc64_aix5_so_CFLAGS = $(AM_CFLAGS_PPC64_AIX5) $(AM_CFLAGS_PIC)
vgpreload_tdheap_ppc64_aix5_so_DEPENDENCIES = $(LIBREPLACEMALLOC_PPC64_AIX5)
vgpreload_tdheap_ppc64_aix5_so_LDFLAGS = \
	$(PRELOAD_LDFLAGS_PPC64_AIX5) \
	$(LIBREPLACEMALLOC_LDFLAGS_PPC64_AIX5)

NONE_SOURCES_COMMON = th_main.c malloc_replace.c mem_tracer.c cluster_output.c
tdheap_x86_linux_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_x86_linux_CPPFLAGS = $(AM_CPPFLAGS_X86_LINUX)
tdheap_x86_linux_CFLAGS = $(AM_CFLAGS_X86_LINUX)
tdheap_x86_linux_DEPENDENCIES = $(COREGRIND_LIBS_X86_LINUX)
tdheap_x86_linux_LDADD = $(TOOL_LDADD_X86_LINUX)
tdheap_x86_linux_LDFLAGS = $(TOOL_LDFLAGS_X86_LINUX)
tdheap_amd64_linux_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_amd64_linux_CPPFLAGS = $(AM_CPPFLAGS_AMD64_LINUX)
tdheap_amd64_linux_CFLAGS = $(AM_CFLAGS_AMD64_LINUX)
tdheap_amd64_linux_DEPENDENCIES = $(COREGRIND_LIBS_AMD64_LINUX)
tdheap_amd64_linux_LDADD = $(TOOL_LDADD_AMD64_LINUX)
tdheap_amd64_linux_LDFLAGS = $(TOOL_LDFLAGS_AMD64_LINUX)
tdheap_ppc32_linux_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_ppc32_linux_CPPFLAGS = $(AM_CPPFLAGS_PPC32_LINUX)
tdheap_ppc32_linux_CFLAGS = $(AM_CFLAGS_PPC32_LINUX)
tdheap_ppc32_linux_DEPENDENCIES = $(COREGRIND_LIBS_PPC32_LINUX)
tdheap_ppc32_linux_LDADD = $(TOOL_LDADD_PPC32_LINUX)
tdheap_ppc32_linux_LDFLAGS = $(TOOL_LDFLAGS_PPC32_LINUX)
tdheap_ppc64_linux_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_ppc64_linux_CPPFLAGS = $(AM_CPPFLAGS_PPC64_LINUX)
tdheap_ppc64_linux_CFLAGS = $(AM_CFLAGS_PPC64_LINUX)
tdheap_ppc64_linux_DEPENDENCIES = $(COREGRIND_LIBS_PPC64_LINUX)
tdheap_ppc64_linux_LDADD = $(TOOL_LDADD_PPC64_LINUX)
tdheap_ppc64_linux_LDFLAGS = $(TOOL_LDFLAGS_PPC64_LINUX)
tdheap_ppc32_aix5_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_ppc32_aix5_CPPFLAGS = $(AM_CPPFLAGS_PPC32_AIX5)
tdheap_ppc32_aix5_CFLAGS = $(AM_CFLAGS_PPC32_AIX5)
tdheap_ppc32_aix5_DEPENDENCIES = $(COREGRIND_LIBS_PPC32_AIX5)
tdheap_ppc32_aix5_LDADD = $(TOOL_LDADD_PPC32_AIX5)
tdheap_ppc32_aix5_LDFLAGS = $(TOOL_LDFLAGS_PPC32_AIX5)
tdheap_ppc64_aix5_SOURCES = $(NONE_SOURCES_COMMON)
tdheap_ppc64_aix5_CPPFLAGS = $(AM_CPPFLAGS_PPC64_AIX5)
tdheap_ppc64_aix5_CFLAGS = $(AM_CFLAGS_PPC64_AIX5)
tdheap_ppc64_aix5_DEPENDENCIES = $(COREGRIND_LIBS_PPC64_AIX5)
tdheap_ppc64_aix5_LDADD = $(TOOL_LDADD_PPC64_AIX5)
tdheap_ppc64_aix5_LDFLAGS = $(TOOL_LDFLAGS_PPC64_AIX5)
noinst_headers = replace_malloc.h mem_tracer.h cluster_output.h
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.tool.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.install.am $(top_srcdir)/Makefile.tool-flags.am $(top_srcdir)/Makefile.flags.am $(top_srcdir)/Makefile.tool-inplace.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tdheap/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tdheap/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
tdheap-amd64-linux$(EXEEXT): $(tdheap_amd64_linux_OBJECTS) $(tdheap_amd64_linux_DEPENDENCIES) 
	@rm -f tdheap-amd64-linux$(EXEEXT)
	$(tdheap_amd64_linux_LINK) $(tdheap_amd64_linux_OBJECTS) $(tdheap_amd64_linux_LDADD) $(LIBS)
tdheap-ppc32-aix5$(EXEEXT): $(tdheap_ppc32_aix5_OBJECTS) $(tdheap_ppc32_aix5_DEPENDENCIES) 
	@rm -f tdheap-ppc32-aix5$(EXEEXT)
	$(tdheap_ppc32_aix5_LINK) $(tdheap_ppc32_aix5_OBJECTS) $(tdheap_ppc32_aix5_LDADD) $(LIBS)
tdheap-ppc32-linux$(EXEEXT): $(tdheap_ppc32_linux_OBJECTS) $(tdheap_ppc32_linux_DEPENDENCIES) 
	@rm -f tdheap-ppc32-linux$(EXEEXT)
	$(tdheap_ppc32_linux_LINK) $(tdheap_ppc32_linux_OBJECTS) $(tdheap_ppc32_linux_LDADD) $(LIBS)
tdheap-ppc64-aix5$(EXEEXT): $(tdheap_ppc64_aix5_OBJECTS) $(tdheap_ppc64_aix5_DEPENDENCIES) 
	@rm -f tdheap-ppc64-aix5$(EXEEXT)
	$(tdheap_ppc64_aix5_LINK) $(tdheap_ppc64_aix5_OBJECTS) $(tdheap_ppc64_aix5_LDADD) $(LIBS)
tdheap-ppc64-linux$(EXEEXT): $(tdheap_ppc64_linux_OBJECTS) $(tdheap_ppc64_linux_DEPENDENCIES) 
	@rm -f tdheap-ppc64-linux$(EXEEXT)
	$(tdheap_ppc64_linux_LINK) $(tdheap_ppc64_linux_OBJECTS) $(tdheap_ppc64_linux_LDADD) $(LIBS)
tdheap-x86-linux$(EXEEXT): $(tdheap_x86_linux_OBJECTS) $(tdheap_x86_linux_DEPENDENCIES) 
	@rm -f tdheap-x86-linux$(EXEEXT)
	$(tdheap_x86_linux_LINK) $(tdheap_x86_linux_OBJECTS) $(tdheap_x86_linux_LDADD) $(LIBS)
vgpreload_tdheap-amd64-linux.so$(EXEEXT): $(vgpreload_tdheap_amd64_linux_so_OBJECTS) $(vgpreload_tdheap_amd64_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-amd64-linux.so$(EXEEXT)
	$(vgpreload_tdheap_amd64_linux_so_LINK) $(vgpreload_tdheap_amd64_linux_so_OBJECTS) $(vgpreload_tdheap_amd64_linux_so_LDADD) $(LIBS)
vgpreload_tdheap-ppc32-aix5.so$(EXEEXT): $(vgpreload_tdheap_ppc32_aix5_so_OBJECTS) $(vgpreload_tdheap_ppc32_aix5_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-ppc32-aix5.so$(EXEEXT)
	$(vgpreload_tdheap_ppc32_aix5_so_LINK) $(vgpreload_tdheap_ppc32_aix5_so_OBJECTS) $(vgpreload_tdheap_ppc32_aix5_so_LDADD) $(LIBS)
vgpreload_tdheap-ppc32-linux.so$(EXEEXT): $(vgpreload_tdheap_ppc32_linux_so_OBJECTS) $(vgpreload_tdheap_ppc32_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-ppc32-linux.so$(EXEEXT)
	$(vgpreload_tdheap_ppc32_linux_so_LINK) $(vgpreload_tdheap_ppc32_linux_so_OBJECTS) $(vgpreload_tdheap_ppc32_linux_so_LDADD) $(LIBS)
vgpreload_tdheap-ppc64-aix5.so$(EXEEXT): $(vgpreload_tdheap_ppc64_aix5_so_OBJECTS) $(vgpreload_tdheap_ppc64_aix5_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-ppc64-aix5.so$(EXEEXT)
	$(vgpreload_tdheap_ppc64_aix5_so_LINK) $(vgpreload_tdheap_ppc64_aix5_so_OBJECTS) $(vgpreload_tdheap_ppc64_aix5_so_LDADD) $(LIBS)
vgpreload_tdheap-ppc64-linux.so$(EXEEXT): $(vgpreload_tdheap_ppc64_linux_so_OBJECTS) $(vgpreload_tdheap_ppc64_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-ppc64-linux.so$(EXEEXT)
	$(vgpreload_tdheap_ppc64_linux_so_LINK) $(vgpreload_tdheap_ppc64_linux_so_OBJECTS) $(vgpreload_tdheap_ppc64_linux_so_LDADD) $(LIBS)
vgpreload_tdheap-x86-linux.so$(EXEEXT): $(vgpreload_tdheap_x86_linux_so_OBJECTS) $(vgpreload_tdheap_x86_linux_so_DEPENDENCIES) 
	@rm -f vgpreload_tdheap-x86-linux.so$(EXEEXT)
	$(vgpreload_tdheap_x86_linux_so_LINK) $(vgpreload_tdheap_x86_linux_so_OBJECTS) $(vgpreload_tdheap_x86_linux_so_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/tdheap_amd64_linux-cluster_output.Po
include ./$(DEPDIR)/tdheap_amd64_linux-malloc_replace.Po
include ./$(DEPDIR)/tdheap_amd64_linux-mem_tracer.Po
include ./$(DEPDIR)/tdheap_amd64_linux-th_main.Po
include ./$(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Po
include ./$(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Po
include ./$(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Po
include ./$(DEPDIR)/tdheap_ppc32_aix5-th_main.Po
include ./$(DEPDIR)/tdheap_ppc32_linux-cluster_output.Po
include ./$(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Po
include ./$(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Po
include ./$(DEPDIR)/tdheap_ppc32_linux-th_main.Po
include ./$(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Po
include ./$(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Po
include ./$(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Po
include ./$(DEPDIR)/tdheap_ppc64_aix5-th_main.Po
include ./$(DEPDIR)/tdheap_ppc64_linux-cluster_output.Po
include ./$(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Po
include ./$(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Po
include ./$(DEPDIR)/tdheap_ppc64_linux-th_main.Po
include ./$(DEPDIR)/tdheap_x86_linux-cluster_output.Po
include ./$(DEPDIR)/tdheap_x86_linux-malloc_replace.Po
include ./$(DEPDIR)/tdheap_x86_linux-mem_tracer.Po
include ./$(DEPDIR)/tdheap_x86_linux-th_main.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

tdheap_amd64_linux-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-th_main.Tpo -c -o tdheap_amd64_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_amd64_linux-th_main.Tpo $(DEPDIR)/tdheap_amd64_linux-th_main.Po
#	source='th_main.c' object='tdheap_amd64_linux-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_amd64_linux-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-th_main.Tpo -c -o tdheap_amd64_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_amd64_linux-th_main.Tpo $(DEPDIR)/tdheap_amd64_linux-th_main.Po
#	source='th_main.c' object='tdheap_amd64_linux-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_amd64_linux-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Tpo -c -o tdheap_amd64_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_amd64_linux-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_amd64_linux-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Tpo -c -o tdheap_amd64_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_amd64_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_amd64_linux-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_amd64_linux-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Tpo -c -o tdheap_amd64_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_amd64_linux-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_amd64_linux-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Tpo -c -o tdheap_amd64_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_amd64_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_amd64_linux-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_amd64_linux-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-cluster_output.Tpo -c -o tdheap_amd64_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_amd64_linux-cluster_output.Tpo $(DEPDIR)/tdheap_amd64_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_amd64_linux-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_amd64_linux-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -MT tdheap_amd64_linux-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_amd64_linux-cluster_output.Tpo -c -o tdheap_amd64_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_amd64_linux-cluster_output.Tpo $(DEPDIR)/tdheap_amd64_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_amd64_linux-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_amd64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_amd64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_amd64_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

tdheap_ppc32_aix5-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-th_main.Tpo -c -o tdheap_ppc32_aix5-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-th_main.Tpo $(DEPDIR)/tdheap_ppc32_aix5-th_main.Po
#	source='th_main.c' object='tdheap_ppc32_aix5-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_ppc32_aix5-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-th_main.Tpo -c -o tdheap_ppc32_aix5-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-th_main.Tpo $(DEPDIR)/tdheap_ppc32_aix5-th_main.Po
#	source='th_main.c' object='tdheap_ppc32_aix5-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_ppc32_aix5-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Tpo -c -o tdheap_ppc32_aix5-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc32_aix5-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_ppc32_aix5-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Tpo -c -o tdheap_ppc32_aix5-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc32_aix5-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc32_aix5-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_ppc32_aix5-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Tpo -c -o tdheap_ppc32_aix5-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc32_aix5-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_ppc32_aix5-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Tpo -c -o tdheap_ppc32_aix5-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc32_aix5-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc32_aix5-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_ppc32_aix5-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Tpo -c -o tdheap_ppc32_aix5-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Tpo $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc32_aix5-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_ppc32_aix5-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_aix5-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Tpo -c -o tdheap_ppc32_aix5-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Tpo $(DEPDIR)/tdheap_ppc32_aix5-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc32_aix5-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_aix5-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

tdheap_ppc32_linux-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-th_main.Tpo -c -o tdheap_ppc32_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_ppc32_linux-th_main.Tpo $(DEPDIR)/tdheap_ppc32_linux-th_main.Po
#	source='th_main.c' object='tdheap_ppc32_linux-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_ppc32_linux-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-th_main.Tpo -c -o tdheap_ppc32_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_linux-th_main.Tpo $(DEPDIR)/tdheap_ppc32_linux-th_main.Po
#	source='th_main.c' object='tdheap_ppc32_linux-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_ppc32_linux-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Tpo -c -o tdheap_ppc32_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc32_linux-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_ppc32_linux-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Tpo -c -o tdheap_ppc32_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc32_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc32_linux-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_ppc32_linux-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Tpo -c -o tdheap_ppc32_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc32_linux-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_ppc32_linux-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Tpo -c -o tdheap_ppc32_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc32_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc32_linux-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_ppc32_linux-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Tpo -c -o tdheap_ppc32_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Tpo $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc32_linux-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_ppc32_linux-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc32_linux-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Tpo -c -o tdheap_ppc32_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Tpo $(DEPDIR)/tdheap_ppc32_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc32_linux-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc32_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc32_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc32_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

tdheap_ppc64_aix5-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-th_main.Tpo -c -o tdheap_ppc64_aix5-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-th_main.Tpo $(DEPDIR)/tdheap_ppc64_aix5-th_main.Po
#	source='th_main.c' object='tdheap_ppc64_aix5-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_ppc64_aix5-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-th_main.Tpo -c -o tdheap_ppc64_aix5-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-th_main.Tpo $(DEPDIR)/tdheap_ppc64_aix5-th_main.Po
#	source='th_main.c' object='tdheap_ppc64_aix5-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_ppc64_aix5-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Tpo -c -o tdheap_ppc64_aix5-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc64_aix5-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_ppc64_aix5-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Tpo -c -o tdheap_ppc64_aix5-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc64_aix5-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc64_aix5-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_ppc64_aix5-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Tpo -c -o tdheap_ppc64_aix5-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc64_aix5-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_ppc64_aix5-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Tpo -c -o tdheap_ppc64_aix5-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc64_aix5-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc64_aix5-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_ppc64_aix5-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Tpo -c -o tdheap_ppc64_aix5-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Tpo $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc64_aix5-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_ppc64_aix5-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_aix5-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Tpo -c -o tdheap_ppc64_aix5-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Tpo $(DEPDIR)/tdheap_ppc64_aix5-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc64_aix5-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_aix5_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_aix5_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_aix5-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

tdheap_ppc64_linux-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-th_main.Tpo -c -o tdheap_ppc64_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_ppc64_linux-th_main.Tpo $(DEPDIR)/tdheap_ppc64_linux-th_main.Po
#	source='th_main.c' object='tdheap_ppc64_linux-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_ppc64_linux-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-th_main.Tpo -c -o tdheap_ppc64_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_linux-th_main.Tpo $(DEPDIR)/tdheap_ppc64_linux-th_main.Po
#	source='th_main.c' object='tdheap_ppc64_linux-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_ppc64_linux-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Tpo -c -o tdheap_ppc64_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc64_linux-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_ppc64_linux-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Tpo -c -o tdheap_ppc64_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_ppc64_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_ppc64_linux-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_ppc64_linux-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Tpo -c -o tdheap_ppc64_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc64_linux-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_ppc64_linux-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Tpo -c -o tdheap_ppc64_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_ppc64_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_ppc64_linux-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_ppc64_linux-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Tpo -c -o tdheap_ppc64_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Tpo $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc64_linux-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_ppc64_linux-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -MT tdheap_ppc64_linux-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Tpo -c -o tdheap_ppc64_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Tpo $(DEPDIR)/tdheap_ppc64_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_ppc64_linux-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_ppc64_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_ppc64_linux_CFLAGS) $(CFLAGS) -c -o tdheap_ppc64_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

tdheap_x86_linux-th_main.o: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-th_main.o -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-th_main.Tpo -c -o tdheap_x86_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c
	mv -f $(DEPDIR)/tdheap_x86_linux-th_main.Tpo $(DEPDIR)/tdheap_x86_linux-th_main.Po
#	source='th_main.c' object='tdheap_x86_linux-th_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-th_main.o `test -f 'th_main.c' || echo '$(srcdir)/'`th_main.c

tdheap_x86_linux-th_main.obj: th_main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-th_main.obj -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-th_main.Tpo -c -o tdheap_x86_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`
	mv -f $(DEPDIR)/tdheap_x86_linux-th_main.Tpo $(DEPDIR)/tdheap_x86_linux-th_main.Po
#	source='th_main.c' object='tdheap_x86_linux-th_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-th_main.obj `if test -f 'th_main.c'; then $(CYGPATH_W) 'th_main.c'; else $(CYGPATH_W) '$(srcdir)/th_main.c'; fi`

tdheap_x86_linux-malloc_replace.o: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-malloc_replace.o -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-malloc_replace.Tpo -c -o tdheap_x86_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c
	mv -f $(DEPDIR)/tdheap_x86_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_x86_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_x86_linux-malloc_replace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-malloc_replace.o `test -f 'malloc_replace.c' || echo '$(srcdir)/'`malloc_replace.c

tdheap_x86_linux-malloc_replace.obj: malloc_replace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-malloc_replace.obj -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-malloc_replace.Tpo -c -o tdheap_x86_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`
	mv -f $(DEPDIR)/tdheap_x86_linux-malloc_replace.Tpo $(DEPDIR)/tdheap_x86_linux-malloc_replace.Po
#	source='malloc_replace.c' object='tdheap_x86_linux-malloc_replace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-malloc_replace.obj `if test -f 'malloc_replace.c'; then $(CYGPATH_W) 'malloc_replace.c'; else $(CYGPATH_W) '$(srcdir)/malloc_replace.c'; fi`

tdheap_x86_linux-mem_tracer.o: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-mem_tracer.o -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-mem_tracer.Tpo -c -o tdheap_x86_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c
	mv -f $(DEPDIR)/tdheap_x86_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_x86_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_x86_linux-mem_tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-mem_tracer.o `test -f 'mem_tracer.c' || echo '$(srcdir)/'`mem_tracer.c

tdheap_x86_linux-mem_tracer.obj: mem_tracer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-mem_tracer.obj -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-mem_tracer.Tpo -c -o tdheap_x86_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`
	mv -f $(DEPDIR)/tdheap_x86_linux-mem_tracer.Tpo $(DEPDIR)/tdheap_x86_linux-mem_tracer.Po
#	source='mem_tracer.c' object='tdheap_x86_linux-mem_tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-mem_tracer.obj `if test -f 'mem_tracer.c'; then $(CYGPATH_W) 'mem_tracer.c'; else $(CYGPATH_W) '$(srcdir)/mem_tracer.c'; fi`

tdheap_x86_linux-cluster_output.o: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-cluster_output.o -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-cluster_output.Tpo -c -o tdheap_x86_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c
	mv -f $(DEPDIR)/tdheap_x86_linux-cluster_output.Tpo $(DEPDIR)/tdheap_x86_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_x86_linux-cluster_output.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-cluster_output.o `test -f 'cluster_output.c' || echo '$(srcdir)/'`cluster_output.c

tdheap_x86_linux-cluster_output.obj: cluster_output.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -MT tdheap_x86_linux-cluster_output.obj -MD -MP -MF $(DEPDIR)/tdheap_x86_linux-cluster_output.Tpo -c -o tdheap_x86_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`
	mv -f $(DEPDIR)/tdheap_x86_linux-cluster_output.Tpo $(DEPDIR)/tdheap_x86_linux-cluster_output.Po
#	source='cluster_output.c' object='tdheap_x86_linux-cluster_output.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tdheap_x86_linux_CPPFLAGS) $(CPPFLAGS) $(tdheap_x86_linux_CFLAGS) $(CFLAGS) -c -o tdheap_x86_linux-cluster_output.obj `if test -f 'cluster_output.c'; then $(CYGPATH_W) 'cluster_output.c'; else $(CYGPATH_W) '$(srcdir)/cluster_output.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) all-local
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am: install-exec-local

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-local install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am


# The kludge that passes for vex's build system can't handle parallel
# builds.  So, for the time being, serialise all Valgrind building.
# (this is equivalent to enforcing "make -j 1".
.NOTPARALLEL:

install-exec-local:
	if [ -n "$(noinst_PROGRAMS)" ] ; then \
	  for f in $(noinst_PROGRAMS); do \
	    name=`echo $$f | sed -e 's/-\([^-]*-[^-.]*\)\(\..*\)\?$$/\2/'`; \
	    plat=`echo $$f | sed -e 's/^.*-\([^-]*-[^-.]*\)\(\..*\)\?$$/\1/'`; \
	    $(mkinstalldirs) $(DESTDIR)$(valdir)/$$plat; \
	    $(INSTALL_PROGRAM) $$f $(DESTDIR)$(valdir)/$$plat/$$name; \
	  done ; \
	fi ; \
	if [ -n "$(noinst_LIBRARIES)" ] ; then \
	  for f in $(noinst_LIBRARIES) expr_wont_match_me; do \
	    if expr match $$f libcoregrind_ > /dev/null ; then \
	      pU=`echo $$f | sed -e 's/libcoregrind_//g' -e 's/\.a//g'` ; \
	      pD=`echo $$pU | sed -e 's/_/-/g'` ; \
	      $(INSTALL_DATA) $$f $(DESTDIR)$(valdir)/$$pD/libcoregrind.a ; \
	      $(INSTALL_DATA) $(top_srcdir)/VEX/libvex_$$pU.a \
				$(DESTDIR)$(valdir)/$$pD/libvex.a ; \
	    fi ; \
	  done ; \
	fi

all-local:
	if [ -n "$(noinst_PROGRAMS)" ] ; then \
	  for f in $(noinst_PROGRAMS); do \
	    name=`echo $$f | sed -e 's/-\([^-]*-[^-.]*\)\(\..*\)\?$$/\2/'`; \
	    plat=`echo $$f | sed -e 's/^.*-\([^-]*-[^-.]*\)\(\..*\)\?$$/\1/'`; \
	    mkdir -p $(inplacedir)/$$plat; \
	    rm -f $(inplacedir)/$$plat/$$name; \
	    ln -f -s ../../$(subdir)/$$f $(inplacedir)/$$plat/$$name; \
	  done ; \
	fi

$(top_srcdir)/VEX/libvex_x86_linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex_x86_linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_X86_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex_amd64_linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex_amd64_linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_AMD64_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex_ppc32_linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex_ppc32_linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC32_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex_ppc64_linux.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR)" \
	libvex_ppc64_linux.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC64_LINUX) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex_ppc32_aix5.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR) -X32" \
	libvex_ppc32_aix5.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC32_AIX5) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/libvex_ppc64_aix5.a: $(top_srcdir)/VEX/priv/main/vex_svnversion.h
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" AR="$(AR) -X64" \
	libvex_ppc64_aix5.a \
	EXTRA_CFLAGS="$(AM_CFLAGS_PPC64_AIX5) -Wdeclaration-after-statement \
			-fno-stack-protector"

$(top_srcdir)/VEX/priv/main/vex_svnversion.h:
	$(MAKE) -C $(top_srcdir)/VEX CC="$(CC)" version
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
